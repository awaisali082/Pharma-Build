{"version":3,"file":"15.chunk.js","sources":["webpack:///./~/jquery-locationpicker/src/locationpicker.jquery.js","webpack:///./src/app/AddChemist/AddChemist.component.ts","webpack:///./src/app/AddChemist/AddChemist.module.ts","webpack:///./src/app/AddChemist/AddChemist.style.scss","webpack:///./src/app/AddChemist/AddChemist.template.html","webpack:///./src/app/services/AddchemistService.ts","webpack:///./src/app/services/ServiceUrl.ts?af2c*"],"sourcesContent":["(function ( $ ) {\n\n    /**\n     * Holds google map object and related utility entities.\n     * @constructor\n     */\n    function GMapContext(domElement, options) {\n        var _map = new google.maps.Map(domElement, options);\n        var _marker = new google.maps.Marker({\n            position: new google.maps.LatLng(54.19335, -3.92695),\n            map: _map,\n            title: \"Drag Me\",\n            draggable: options.draggable\n        });\n        return {\n            map: _map,\n            marker: _marker,\n            circle: null,\n            location: _marker.position,\n            radius: options.radius,\n            locationName: options.locationName,\n            addressComponents: {\n                formatted_address: null,\n                addressLine1: null,\n                addressLine2: null,\n                streetName: null,\n                streetNumber: null,\n                city: null,\n                district: null,\n                state: null,\n                stateOrProvince: null\n            },\n            settings: options.settings,\n            domContainer: domElement,\n            geodecoder: new google.maps.Geocoder()\n        }\n    }\n\n    // Utility functions for Google Map Manipulations\n    var GmUtility = {\n        /**\n         * Draw a circle over the the map. Returns circle object.\n         * Also writes new circle object in gmapContext.\n         *\n         * @param center - LatLng of the center of the circle\n         * @param radius - radius in meters\n         * @param gmapContext - context\n         * @param options\n         */\n        drawCircle: function(gmapContext, center, radius, options) {\n            if (gmapContext.circle != null) {\n                gmapContext.circle.setMap(null);\n            }\n            if (radius > 0) {\n                radius *= 1;\n                options = $.extend({\n                    strokeColor: \"#0000FF\",\n                    strokeOpacity: 0.35,\n                    strokeWeight: 2,\n                    fillColor: \"#0000FF\",\n                    fillOpacity: 0.20\n                }, options);\n                options.map = gmapContext.map;\n                options.radius = radius;\n                options.center = center;\n                gmapContext.circle = new google.maps.Circle(options);\n                return gmapContext.circle;\n            }\n            return null;\n        },\n        /**\n         *\n         * @param gMapContext\n         * @param location\n         * @param callback\n         */\n        setPosition: function(gMapContext, location, callback) {\n            gMapContext.location = location;\n            gMapContext.marker.setPosition(location);\n            gMapContext.map.panTo(location);\n            this.drawCircle(gMapContext, location, gMapContext.radius, {});\n            if (gMapContext.settings.enableReverseGeocode) {\n                gMapContext.geodecoder.geocode({latLng: gMapContext.location}, function(results, status){\n                    if (status == google.maps.GeocoderStatus.OK && results.length > 0){\n                        gMapContext.locationName = results[0].formatted_address;\n                        gMapContext.addressComponents =\n                            GmUtility.address_component_from_google_geocode(results[0].address_components);\n                    }\n                    if (callback) {\n                        callback.call(this, gMapContext);\n                    }\n                });\n            } else {\n                if (callback) {\n                    callback.call(this, gMapContext);\n                }\n            }\n\n        },\n        locationFromLatLng: function(lnlg) {\n            return {latitude: lnlg.lat(), longitude: lnlg.lng()}\n        },\n        address_component_from_google_geocode: function(address_components) {\n            var result = {};\n            for (var i = address_components.length-1; i>=0; i--) {\n                var component = address_components[i];\n                // Postal code\n                if (component.types.indexOf('postal_code') >= 0) {\n                    result.postalCode = component.short_name;\n                }\n                // Street number\n                else if (component.types.indexOf('street_number') >= 0) {\n                    result.streetNumber = component.short_name;\n                }\n                // Street name\n                else if (component.types.indexOf('route') >= 0) {\n                    result.streetName = component.short_name;\n                }\n                // City\n                else if (component.types.indexOf('locality') >= 0) {\n                    result.city = component.short_name;\n                }\n                // District\n                else if (component.types.indexOf('sublocality') >= 0) {\n                    result.district = component.short_name;\n                }\n                // State \\ Province\n                else if (component.types.indexOf('administrative_area_level_1') >= 0) {\n                    result.stateOrProvince = component.short_name;\n                }\n                // State \\ Province\n                else if (component.types.indexOf('country') >= 0) {\n                    result.country = component.short_name;\n                }\n            }\n            result.addressLine1 = [result.streetNumber, result.streetName].join(' ').trim();\n            result.addressLine2 = '';\n            return result;\n        }\n    };\n\n    function isPluginApplied(domObj) {\n        return getContextForElement(domObj) != undefined;\n    }\n\n    function getContextForElement(domObj) {\n        return $(domObj).data(\"locationpicker\");\n    }\n\n    function updateInputValues(inputBinding, gmapContext){\n        if (!inputBinding) return;\n        var currentLocation = GmUtility.locationFromLatLng(gmapContext.location);\n        if (inputBinding.latitudeInput) {\n            inputBinding.latitudeInput.val(currentLocation.latitude).change();\n        }\n        if (inputBinding.longitudeInput) {\n            inputBinding.longitudeInput.val(currentLocation.longitude).change();\n        }\n        if (inputBinding.radiusInput) {\n            inputBinding.radiusInput.val(gmapContext.radius).change();\n        }\n        if (inputBinding.locationNameInput) {\n            inputBinding.locationNameInput.val(gmapContext.locationName).change();\n        }\n    }\n\n    function setupInputListenersInput(inputBinding, gmapContext) {\n        if (inputBinding) {\n            if (inputBinding.radiusInput){\n                inputBinding.radiusInput.on(\"change\", function(e) {\n                    if (!e.originalEvent) { return }\n                    gmapContext.radius = $(this).val();\n                    GmUtility.setPosition(gmapContext, gmapContext.location, function(context){\n                        context.settings.onchanged.apply(gmapContext.domContainer,\n                            [GmUtility.locationFromLatLng(context.location), context.radius, false]);\n                    });\n                });\n            }\n            if (inputBinding.locationNameInput && gmapContext.settings.enableAutocomplete) {\n                gmapContext.autocomplete = new google.maps.places.Autocomplete(inputBinding.locationNameInput.get(0));\n                google.maps.event.addListener(gmapContext.autocomplete, 'place_changed', function() {\n                    var place = gmapContext.autocomplete.getPlace();\n                    if (!place.geometry) {\n                        gmapContext.settings.onlocationnotfound(place.name);\n                        return;\n                    }\n                    GmUtility.setPosition(gmapContext, place.geometry.location, function(context) {\n                        updateInputValues(inputBinding, context);\n                        context.settings.onchanged.apply(gmapContext.domContainer,\n                            [GmUtility.locationFromLatLng(context.location), context.radius, false]);\n                    });\n                });\n            }\n            if (inputBinding.latitudeInput) {\n                inputBinding.latitudeInput.on(\"change\", function(e) {\n                    if (!e.originalEvent) { return }\n                    GmUtility.setPosition(gmapContext, new google.maps.LatLng($(this).val(), gmapContext.location.lng()), function(context){\n                        context.settings.onchanged.apply(gmapContext.domContainer,\n                            [GmUtility.locationFromLatLng(context.location), context.radius, false]);\n                    });\n                });\n            }\n            if (inputBinding.longitudeInput) {\n                inputBinding.longitudeInput.on(\"change\", function(e) {\n                    if (!e.originalEvent) { return }\n                    GmUtility.setPosition(gmapContext, new google.maps.LatLng(gmapContext.location.lat(), $(this).val()), function(context){\n                        context.settings.onchanged.apply(gmapContext.domContainer,\n                            [GmUtility.locationFromLatLng(context.location), context.radius, false]);\n                    });\n                });\n            }\n        }\n    }\n\n    function autosize(gmapContext) {\n        google.maps.event.trigger(gmapContext.map, 'resize');\n        setTimeout(function() {\n            gmapContext.map.setCenter(gmapContext.marker.position);\n        }, 300);\n    }\n\n    /**\n     * Initialization:\n     *  $(\"#myMap\").locationpicker(options);\n     * @param options\n     * @param params\n     * @returns {*}\n     */\n    $.fn.locationpicker = function( options, params ) {\n        if (typeof options == 'string') { // Command provided\n            var _targetDomElement = this.get(0);\n            // Plug-in is not applied - nothing to do.\n            if (!isPluginApplied(_targetDomElement)) return;\n            var gmapContext = getContextForElement(_targetDomElement);\n            switch (options) {\n                case \"location\":\n                    if (params == undefined) { // Getter\n                        var location = GmUtility.locationFromLatLng(gmapContext.location);\n                        location.radius = gmapContext.radius;\n                        location.name = gmapContext.locationName;\n                        return location;\n                    } else { // Setter\n                        if (params.radius) {\n                            gmapContext.radius = params.radius;\n                        }\n                        GmUtility.setPosition(gmapContext, new google.maps.LatLng(params.latitude, params.longitude), function(gmapContext) {\n                            updateInputValues(gmapContext.settings.inputBinding, gmapContext);\n                        });\n                    }\n                    break;\n                case \"subscribe\":\n                    /**\n                     * Provides interface for subscribing for GoogleMap events.\n                     * See Google API documentation for details.\n                     * Parameters:\n                     * - event: string, name of the event\n                     * - callback: function, callback function to be invoked\n                     */\n                    if (params == undefined) { // Getter is not available\n                        return null;\n                    } else {\n                        var event = params.event;\n                        var callback = params.callback;\n                        if (!event || ! callback) {\n                            console.error(\"LocationPicker: Invalid arguments for method \\\"subscribe\\\"\")\n                            return null;\n                        }\n                        google.maps.event.addListener(gmapContext.map, event, callback);\n                    }\n                    break;\n                case \"map\":\n                    /**\n                     * Returns object which allows access actual google widget and marker paced on it.\n                     * Structure: {\n                     *  map: Instance of the google map widget\n                     *  marker: marker placed on map\n                     * }\n                     */\n                    if (params == undefined) { // Getter\n                        var locationObj = GmUtility.locationFromLatLng(gmapContext.location);\n                        locationObj.formattedAddress = gmapContext.locationName;\n                        locationObj.addressComponents = gmapContext.addressComponents;\n                        return {\n                            map: gmapContext.map,\n                            marker: gmapContext.marker,\n                            location: locationObj\n                        }\n                    } else { // Setter is not available\n                        return null;\n                    }\n                case \"autosize\":\n                    autosize(gmapContext);\n                    return this;\n            }\n            return null;\n        }\n        return this.each(function() {\n            var $target = $(this);\n            // If plug-in hasn't been applied before - initialize, otherwise - skip\n            if (isPluginApplied(this)) return;\n            // Plug-in initialization is required\n            // Defaults\n            var settings = $.extend({}, $.fn.locationpicker.defaults, options );\n            // Initialize\n            var gmapContext = new GMapContext(this, {\n                zoom: settings.zoom,\n                center: new google.maps.LatLng(settings.location.latitude, settings.location.longitude),\n                mapTypeId: google.maps.MapTypeId.ROADMAP,\n                mapTypeControl: false,\n                disableDoubleClickZoom: false,\n                scrollwheel: settings.scrollwheel,\n                streetViewControl: false,\n                radius: settings.radius,\n                locationName: settings.locationName,\n                settings: settings,\n                draggable: settings.draggable\n            });\n            $target.data(\"locationpicker\", gmapContext);\n            // Subscribe GMap events\n            google.maps.event.addListener(gmapContext.marker, \"dragend\", function(event) {\n                GmUtility.setPosition(gmapContext, gmapContext.marker.position, function(context){\n                    var currentLocation = GmUtility.locationFromLatLng(gmapContext.location);\n                    context.settings.onchanged.apply(gmapContext.domContainer, [currentLocation, context.radius, true]);\n                    updateInputValues(gmapContext.settings.inputBinding, gmapContext);\n                });\n            });\n            GmUtility.setPosition(gmapContext, new google.maps.LatLng(settings.location.latitude, settings.location.longitude), function(context){\n                updateInputValues(settings.inputBinding, gmapContext);\n                // Set up input bindings if needed\n                setupInputListenersInput(settings.inputBinding, gmapContext);\n                context.settings.oninitialized($target);\n            });\n        });\n    };\n    $.fn.locationpicker.defaults = {\n        location: {latitude: 40.7324319, longitude: -73.82480799999996},\n        locationName: \"\",\n        radius: 500,\n        zoom: 15,\n        scrollwheel: true,\n        inputBinding: {\n            latitudeInput: null,\n            longitudeInput: null,\n            radiusInput: null,\n            locationNameInput: null\n        },\n        enableAutocomplete: false,\n        enableReverseGeocode: true,\n        draggable: true,\n        onchanged: function(currentLocation, radius, isMarkerDropped) {},\n        onlocationnotfound: function(locationName) {},\n        oninitialized: function (component) {}\n\n    }\n\n}( jQuery ));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jquery-locationpicker/src/locationpicker.jquery.js\n// module id = ./node_modules/jquery-locationpicker/src/locationpicker.jquery.js\n// module chunks = 15","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AddCategoryService } from './../services/AddCategoryService';\r\nimport { AddchemistService } from './../services/AddchemistService';\r\nimport {categoryModel} from './../models/categoryModel';\r\nimport * as jQuery from 'jquery';\r\n@Component({\r\n  selector: 'AddChemist',\r\n  providers: [AddchemistService],\r\n  styles: [ require('./AddChemist.style.scss') ],\r\n  template: require('./AddChemist.template.html'),\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    class: 'chemist-page app'\r\n  },\r\n})\r\nexport class AddChemistComponent {\r\n  router: Router;\r\n  public ChemistName:any;\r\n  public ChemistId:any;\r\n  public ChemistEmail:any;\r\n  public ChemistPassword:any;\r\n  public Longitude:any;\r\n  public RegularExpression :any;\r\n  public Latitude:any;\r\n  constructor(public _addChemistServiceService:AddchemistService, router: Router,) {\r\n    this.router = router;\r\n  \r\n  }\r\n  ngOnInit(): void {\r\n    jQuery('#somecomponent').locationpicker();\r\n  }\r\n\r\n  addChemist()\r\n  { \r\n    if(!this.ChemistEmail || !this.ChemistName || !this.ChemistPassword || !this.Longitude || !this.Latitude)\r\n    {\r\n      //alert(\"empty\");\r\n   \r\n       jQuery(\"#snackbar1\").html(\"Please enter Empty field\");\r\n      this.myFunction();  \r\n\r\n    }\r\n    else\r\n    {\r\nthis.RegularExpression=/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n      if(this.RegularExpression.test(this.ChemistEmail))\r\n      {\r\n      this.ChemistId=localStorage.getItem(\"UserType\")\r\n      console.log(this.ChemistId);\r\n     this._addChemistServiceService.AddChemist(this.ChemistEmail,this.ChemistName,this.ChemistPassword,this.Longitude,this.Latitude,this.ChemistId).subscribe(\r\n    response => {\r\n     console.log(response.data);\r\n     jQuery(\"#snackbar1\").html(\"Add Chemist Successfully\");\r\n     this.myFunction();\r\n\r\n    }); \r\n  }\r\n  else\r\n  {\r\n    jQuery(\"#snackbar1\").html(\"Email is not Valid\");\r\n    this.myFunction();\r\n\r\n  }\r\n  }\r\n  }\r\n  myFunction() {\r\n    // Get the snackbar DIV\r\n    var x = document.getElementById(\"snackbar1\")\r\n\r\n    // Add the \"show\" class to DIV\r\n    x.className = \"show\";\r\n\r\n    // After 3 seconds, remove the show class from DIV\r\n    setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\r\n}\r\n\r\n\r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/AddChemist/AddChemist.component.ts","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AddChemistComponent } from './AddChemist.component';\r\nimport \"jquery-locationpicker/src/locationpicker.jquery\";\r\n\r\nexport const routes = [\r\n  { path: '', component: AddChemistComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddChemistComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(routes),\r\n  ]\r\n})\r\nexport default class AddChemistModule {\r\n  static routes = routes;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/AddChemist/AddChemist.module.ts","module.exports = \".login-page {\\n  background-color: #ddd; }\\n\\n.login-page .page-footer {\\n  margin-bottom: 25px;\\n  font-size: 13px;\\n  color: #818a91;\\n  text-align: center; }\\n  @media (min-height: 600px) {\\n    .login-page .page-footer {\\n      position: absolute;\\n      bottom: 0;\\n      left: 0;\\n      right: 0; } }\\n\\n#measurementName {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 100%;\\n  margin-bottom: 14px; }\\n\\n.addbtn {\\n  width: 235px;\\n  color: white !important; }\\n\\n.widget-login-container {\\n  padding-top: 10%; }\\n\\n.widget-login-logo {\\n  margin-top: 15px;\\n  margin-bottom: 15px;\\n  text-align: center;\\n  font-weight: 400; }\\n  .widget-login-logo .fa-circle {\\n    font-size: 13px;\\n    margin: 0 20px; }\\n\\n.widget-login {\\n  padding: 30px; }\\n  .widget-login > header h1, .widget-login > header h2, .widget-login > header h3, .widget-login > header h4, .widget-login > header h5, .widget-login > header h6 {\\n    font-weight: 400;\\n    text-align: center; }\\n\\n.widget-login-info {\\n  font-size: 13px;\\n  color: #888;\\n  margin-top: 1px;\\n  margin-bottom: 0;\\n  text-align: center; }\\n  .widget-login-info.abc-checkbox {\\n    margin-left: -25px; }\\n\\n.login-form .form-control {\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef; }\\n  .login-form .form-control:focus {\\n    background-color: #ddd; }\\n\\n#snackbar1 {\\n  visibility: hidden;\\n  /* Hidden by default. Visible on click */\\n  min-width: 250px;\\n  /* Set a default minimum width */\\n  margin-left: -125px;\\n  /* Divide value of min-width by 2 */\\n  background-color: #333;\\n  /* Black background color */\\n  color: #fff;\\n  /* White text color */\\n  text-align: center;\\n  /* Centered text */\\n  border-radius: 2px;\\n  /* Rounded borders */\\n  padding: 16px;\\n  /* Padding */\\n  position: fixed;\\n  /* Sit on top of the screen */\\n  z-index: 1;\\n  /* Add a z-index if needed */\\n  left: 50%;\\n  /* Center the snackbar */\\n  bottom: 30px;\\n  /* 30px from the bottom */ }\\n\\nagm-map {\\n  height: 300px; }\\n\\n.AddDosage {\\n  width: 297px; }\\n\\n.AddSize {\\n  width: 297px; }\\n\\n/* Show the snackbar when clicking on a button (class added with JavaScript) */\\n#snackbar1.show {\\n  visibility: visible;\\n  /* Show the snackbar */\\n  /* Add animation: Take 0.5 seconds to fade in and out the snackbar. \\r\\nHowever, delay the fade out process for 2.5 seconds */\\n  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;\\n  animation: fadein 0.5s, fadeout 0.5s 2.5s; }\\n\\n/* Animations to fade the snackbar in and out */\\n@-webkit-keyframes fadein {\\n  from {\\n    bottom: 0;\\n    opacity: 0; }\\n  to {\\n    bottom: 30px;\\n    opacity: 1; } }\\n\\n@keyframes fadein {\\n  from {\\n    bottom: 0;\\n    opacity: 0; }\\n  to {\\n    bottom: 30px;\\n    opacity: 1; } }\\n\\n@-webkit-keyframes fadeout {\\n  from {\\n    bottom: 30px;\\n    opacity: 1; }\\n  to {\\n    bottom: 0;\\n    opacity: 0; } }\\n\\n@keyframes fadeout {\\n  from {\\n    bottom: 30px;\\n    opacity: 1; }\\n  to {\\n    bottom: 0;\\n    opacity: 0; } }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/AddChemist/AddChemist.style.scss\n// module id = ./src/app/AddChemist/AddChemist.style.scss\n// module chunks = 15","module.exports = \"<div id=\\\"snackbar1\\\"></div>\\r\\n\\r\\n<div id=\\\"somecomponent\\\" style=\\\"width: 500px; height: 400px;\\\"></div>\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <main id=\\\"content\\\" class=\\\"widget-login-container\\\" role=\\\"main\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-3 col-md-5\\\">\\r\\n        <h5 class=\\\"widget-login-logo animated  fadeInUp\\\">\\r\\n          <i class=\\\"fa fa-circle text-gray\\\"></i>\\r\\n         Pharmacy\\r\\n          <i class=\\\"fa fa-circle text-warning\\\"></i>\\r\\n        </h5>\\r\\n        <section class=\\\"widget widget-login  AddSize animated fadeInUp\\\">\\r\\n          <header>\\r\\n            <h3 style=\\\"font-size:36px;font-weight:900\\\">ADD Chemist</h3>\\r\\n          </header>\\r\\n          <div class=\\\"widget-body\\\">\\r\\n            <p class=\\\"widget-login-info\\\">\\r\\n             \\r\\n            </p>\\r\\n            <p class=\\\"widget-login-info\\\">\\r\\n           \\r\\n            </p>\\r\\n            \\r\\n            <form class=\\\"login-form mt-lg\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n              <input class=\\\"form-control\\\" id=\\\"pswd\\\"  required [(ngModel)]=\\\"ChemistEmail\\\" name=\\\"ChemistEmail\\\" type=\\\"email\\\" placeholder=\\\"Enter Email\\\">\\r\\n            </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input class=\\\"form-control\\\" id=\\\"pswd\\\" [(ngModel)]=\\\"ChemistName\\\"  name=\\\"ChemistName\\\" type=\\\"text\\\" placeholder=\\\"Enter UserName\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <input class=\\\"form-control\\\" id=\\\"pswd\\\" [(ngModel)]=\\\"ChemistPassword\\\"  required=\\\"required\\\" name=\\\"ChemistPassword\\\" type=\\\"password\\\" placeholder=\\\"Enter Password\\\">\\r\\n                </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input class=\\\"form-control\\\" id=\\\"pswd\\\" [(ngModel)]=\\\"Latitude\\\" name=\\\"Latitude\\\" type=\\\"text\\\" placeholder=\\\"Enter Latitude \\\">\\r\\n              </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input class=\\\"form-control\\\" id=\\\"pswd\\\" [(ngModel)]=\\\"Longitude\\\" name=\\\"Longitude\\\" type=\\\"text\\\" placeholder=\\\"Enter Longitude\\\">\\r\\n            </div>\\r\\n \\r\\n              <div class=\\\"clearfix\\\">\\r\\n                <div class=\\\"btn-toolbar pull-xs-right m-t-1\\\">\\r\\n                <!--   <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\">Create an Account</button> -->\\r\\n                  <a class=\\\"btn addbtn btn-inverse btn-sm\\\" (click)=\\\"addChemist()\\\">Add</a>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row m-t-1\\\">\\r\\n                <div class=\\\"col-md-6 push-md-6\\\">\\r\\n                  <div class=\\\"clearfix\\\">\\r\\n                   <!--  <div class=\\\"abc-checkbox widget-login-info pull-xs-right\\\">\\r\\n                      <input type=\\\"checkbox\\\" id=\\\"checkbox1\\\" value=\\\"1\\\">\\r\\n                      <label for=\\\"checkbox1\\\">Keep me signed in </label>\\r\\n                    </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n               <!--  <div class=\\\"col-md-6 pull-md-6\\\">\\r\\n                  <a class=\\\"mr-n-lg\\\" href=\\\"#\\\">Trouble with account?</a>\\r\\n                </div> -->\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </section>\\r\\n      </div>\\r\\n    </div>\\r\\n  </main>\\r\\n <!--  <footer class=\\\"page-footer\\\">\\r\\n    2016 &copy; Sing. Admin Dashboard Template.\\r\\n  </footer> -->\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/AddChemist/AddChemist.template.html\n// module id = ./src/app/AddChemist/AddChemist.template.html\n// module chunks = 15","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class AddchemistService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n    AddChemist(ChemistEmail,ChemistName,ChemistPassword,Longitude,latitide,ChemistId)\r\n    {\r\n        let body = JSON.stringify({ Email: ChemistEmail, Password: ChemistPassword,ChemistName: ChemistName,Longitude: Longitude,Latitude: latitide,ChemistId: ChemistId});\r\n        console.log(body);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'post', headers: headers });\r\n\r\n        return this.http.post(this.urlService.baseUrl + \"User/addChemistDetail\", body, options)\r\n            .map(res => res.json());\r\n    }\r\n \r\n   \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/AddchemistService.ts","import { Injectable, Inject } from '@angular/core';\nexport class ServiceUrl {\n   public baseUrl: string = \"http://pharmaideo.azurewebsites.net/api/\";\n/*    public baseUrl:string = \"http://localhost:5000/\";*/\n/* public baseUrl: string = \"http://104.199.49.55:3000/\";*/\n    constructor() {\n\n    }\n    getUrl() {\n        return this.baseUrl;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/ServiceUrl.ts"],"mappingsrWA;AACA;AAEA;AAEA;AAWA;AASA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AArEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAgEA;;AAAA;AA/DA;;;;;;;;;;AChBA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAYA;AAAA;AAEA;AADA;AAXA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAGA;AAAA;AAFA;AAEA;;;;;;;;ACxBA;;;;;;;ACAA;;;;;;;;;ACAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAfA;AAAA;;AAAA;AAkBA;;AAAA;AAjBA;;;;;;;;;;ACJA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAVA;;;;;","sourceRoot":""}